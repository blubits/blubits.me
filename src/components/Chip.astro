---
import { CHIP_SIZES } from '@blubits/constants/ui';

interface Props {
  backgroundColor?: string;
  className?: string;
  variant?: 'default' | 'code';
  size?: 'small' | 'large';
}

const {
  backgroundColor = "bg-slate-300 dark:bg-slate-600",
  className = "",
  variant = 'default',
  size = 'small',
} = Astro.props;

const sizeConfig = CHIP_SIZES[size];
const isCode = variant === 'code';
---

{
  () => {
    const baseClasses = [
      "inline-flex items-center gap-x-2 self-start",
      sizeConfig.padding,
      sizeConfig.borderRadius,
      backgroundColor,
      className,
    ];

    if (isCode) {
      return (
        <code
          class:list={[
            ...baseClasses,
            "font-mono",
          ]}
        >
          <slot />
        </code>
      );
    } else {
      return (
        <span
          class:list={[
            ...baseClasses,
            size === 'large' && 'shadow' in sizeConfig && sizeConfig.shadow,
          ]}
        >
          <slot />
        </span>
      );
    }
  }
}
