---
import { markdown } from "@astropub/md";
import Chip from "@blubits/components/Chip.astro";
import Details from "@blubits/components/Details.astro";
import PostItem from "@blubits/components/PostItem.astro";
import { Icon } from "astro-icon/components";
import type { CollectionEntry } from "astro:content";
import ModuleChip from "./ModuleChip.astro";
import EditorialChip from "./EditorialChip.astro";

interface Props {
  post: CollectionEntry<"modules"> | CollectionEntry<"editorials">;
}

const { post } = Astro.props;

const fullnames: { [key: string]: string } = {
  oj: "Online Judge",
  cf: "Codeforces",
};

let href = `/notes/${post.collection}/${post.id}`;
if (post.collection === "modules") {
  href = `/notes/${post.collection}/l${post.data.id[0]}/${post.data.id}`;
}
---

<PostItem href={href} title={post.data.title}>
  <Fragment slot="details-left">
    <Details direction="column">
      <p class="rel-timestamp text-sm">
        {post.data["date-created"].toISOString()}
      </p>
    </Details>
  </Fragment>
  <div
    slot="description"
    class="prose prose-sm prose-invert prose-p:text-white"
  >
    {
      post.collection === "editorials"
        ? markdown(post.data["problem-description"])
        : markdown(post.data.summary)
    }
  </div>
  <Fragment slot="details-right">
    <Details direction="column">
      {
        () => {
          if (post.collection === "modules") {
            return (
              <ModuleChip />
            );
          } else {
            return (
              <>
                <EditorialChip />
                <Details>
                  <p>{fullnames[post.data.platform]}</p>
                  <p>â€¢</p>
                  <Chip isCode>{post.data.code}</Chip>
                </Details>
              </>
            );
          }
        }
      }
    </Details>
  </Fragment>
</PostItem>
